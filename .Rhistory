geom_jitter(color = "grey30", width = 0.1, size = 2, alpha = 0.3)+
labs(x = "Crop Seasons", y = "Yield (kg/ha) in the CHECK") +
#scale_y_continuous(breaks = c(1000,2000,3000,4000,5000,6000), limits = c(1000, 6000))+
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=12),
axis.text.y = element_text(size=12),
axis.title=element_text(size=12, face = "bold"),
legend.position = "none")
yld_year
# ggsave("Figures/Box_yld.png", width = 10, height = 5, dpi = 600)
library(patchwork)
sev_year + box_sev +
yld_year + box_yld +
# plot_layout(heights = c(1, 1),
#             widths = c(1,.3,.7))+
plot_annotation(tag_levels = 'A') &
theme(panel.border = element_blank())
ggsave("Figures/Combo_BOX_black.png", width = 10, height = 10, dpi = 600, bg = "white")
library(cowplot)
library(ggrepel)
library(tidyverse)
dat1 <- read_csv("data/sev_yld.csv")
dat1
dat1 %>%
mutate(fungicide = factor(fungicide, levels = c("DIFE + PYDI", "TMET + TEBU", "AZOX + DIFE", "TFLX + PROT",  "TMET", "TTRA", "PYRA + FLUX + PROP", "PYRA"))) %>%
ggplot(aes(efficacy, yld)) +
geom_errorbar(aes(ymin = yld_lw, ymax = yld_upp, color = fungicide), width = 0, size = 0.7) +
geom_errorbarh(aes(xmin = efficacy_lw, xmax = efficacy_up, color = fungicide),  height = 0, size = 0.7)+
labs(x = "Efficacy (%)", y = "Yield response (kg/ha)", color = "Fungicide")+
scale_color_calc()+
geom_point(aes(efficacy, yld, color = fungicide)) +
scale_x_continuous(breaks = c(0,20,40,60,80), limits = c(0, 80))+
theme_minimal_grid()+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.position = "right",
legend.title.align = 0.5,
legend.title = element_text(size=14, face = "bold"))
ggsave("Figures/sev_yld.png", width = 7, height = 5, dpi = 600, bg = "white")
library(cowplot)
library(tidyverse)
library(here)
yld_bas = read_excel(here("data","yld_baseline.xlsx"))
yld_bas = yld_bas %>%
mutate(sig = case_when(
fungicide == "AZOX + DIFE" ~ "sig",
fungicide == "DIFE + PYDI" ~ "sig",
fungicide == "PYRA + FLUX + PROP" ~ "sig",
fungicide == "TFLX + PROT" ~ "sig",
fungicide == "TMET" ~ "sig",
fungicide == "TMET + TEBU" ~ "sig",
fungicide == "TTRA" ~ "sig",
fungicide == "PYRA" ~ "ns",))
yld_bas %>%
mutate(fungicide = factor(fungicide, levels = c("PYRA", "PYRA + FLUX + PROP", "TTRA", "TMET", "AZOX + DIFE","TFLX + PROT","TMET + TEBU",  "DIFE + PYDI"))) %>%
#mutate(region = factor(region, levels = c("South","North"))) %>%
ggplot(aes(fungicide, mean)) +
geom_errorbar(aes(ymin = lower,ymax = upper, color = class, shape = sig), width = 0, size = 1,  position = position_dodge(0.3))+
labs(y = "Yield (kg/ha)", x = "Fungicide",  color = "Disease Pressure", shape = "")+
#scale_y_continuous(breaks=c(50,60,70,80,90,100))+
geom_point(aes(fungicide, mean, color = class),  position = position_dodge(0.3), size = 3.5) +
geom_point(aes(x =fungicide, y = 900,  shape = sig), size = 6, color = "red")+
theme_minimal_grid()+
theme(axis.text=element_text(size=10),
legend.justification = "center",
axis.title=element_text(size=10, face = "bold"),
legend.position = "top",
panel.border = element_rect(color = "gray60", size=1),
legend.title = element_text(size = 10, face = "bold"),
legend.text = element_text(size = 10, face = "italic"))+
scale_color_manual(values=c("#16317d", "#007e2f"),
name = "Disease Pressure",
breaks=c("High",  "Low"),
labels=c("High", "Low"))+
# scale_shape_manual(values = c(1,16),
#                   labels=c("P > 0.05",  "P \u2264 0.05"))+
scale_shape_manual(values = c(" ","*"),
labels=c("",  "P \u2264 0.05"))+
coord_fixed()+
coord_flip()
ggsave("Figures/baseline.png", height=5, width=7, dpi = 600, bg = "white")
fls_tetris <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1i6iM8wxkhmG9DH9voX9YJ_x4BdiGgjL5dkYVc293FZI/edit#gid=1552905913", sheetid = "economic")
fls_tetris <- fls_tetris %>%
mutate(
tau = as.numeric(tau),
D = as.numeric(D))
prob <- function(C, P, tau, D) {
profit <- (D - (C / P)) / sqrt(tau) # loss
prob_gain <- pnorm(profit)
prob_gain
}
for (i in 1:length(fls_tetris$C)) {
fls_tetris$breacking_even[i] <- prob(C = fls_tetris$C[i], D = fls_tetris$D[i], tau = fls_tetris$tau[i], P = fls_tetris$P[i]) * 100
}
library(viridis)
library(tidyverse)
library(ggthemes)
dat <- fls_tetris %>%
mutate(
breacking_even = as.numeric(breacking_even),
breacking_even = round(breacking_even, 1)
)
summary(dat$breacking_even)
dat %>%
mutate(breacking_even1 = case_when(
breacking_even >= 75 ~ "p \u2265 75  ",
breacking_even < 75 & breacking_even >= 65 ~ "65 \u2264 p < 75  ",
breacking_even < 65 & breacking_even >= 55 ~ "55 \u2264 p < 65  ",
breacking_even < 55 & breacking_even >= 45 ~ "45 \u2264 p < 55  ",
breacking_even < 45 ~ "0 \u2264 p < 45  ")) %>%
# mutate(fungicide = case_when(
#   fungicide == "FLUO + FLUT" ~ "Fortix",
#   fungicide == "PYRA" ~ "Headline",
#   fungicide == "TTRA" ~ "Domark")) %>%
mutate(class = factor(class, levels = c("HIGH", "LOW"))) %>%
mutate(fungicide = factor(fungicide, levels = c("PYRA", "TTRA", "DIFE + PYDI"))) %>%
ggplot(aes(factor(C), factor(P), z = breacking_even1, fill = breacking_even1, label = breacking_even1)) +
geom_tile(color = "white", size = 0.5) +
scale_fill_manual(values=met.brewer("Austria", 4), name = "Probability (%)")+
#scale_fill_viridis_d(option = "viridis", direction = -1, name = "Probability (%)")+
scale_color_gradient(high = "white", low = "white") +
labs(x = "Fungicide + application cost (US$/ha)", y = "Soybean price (US$/kg) ", fill = "") +
theme_minimal() +
facet_grid(class ~ fungicide, scales = "free") +
theme(text = element_text(size = 20),
legend.justification = "center",
axis.text.x = element_text(size=20, angle = 45, hjust = 1),
axis.text.y = element_text(size=20),
strip.text.x = element_text(size = 25, face = "bold"),
strip.text.y = element_text(size = 25, face = "bold"),
panel.grid.minor = element_line(colour = "white"),
panel.grid.major = element_line(colour = "white"),
legend.position = "bottom")
ggsave("Figures/tetris.png", width = 13, height = 10, dpi = 600, bg = "white")
library(rnaturalearth)
library(rnaturalearthhires)
us_sf <- ne_states(country = "united states of america",
returnclass = "sf")
plot(us_sf)
library(ggplot2)
usa <- ggplot(us_sf) +
geom_sf(fill = "white")
usa
library(ggmap)
library(ggspatial)
library(tidyverse)
fls_sev <- read_csv("data/dat-sev.csv") %>%
group_by(state) %>%
summarise(sev1 = mean(sev_check)) %>%
mutate(abrev = c("AL", "AR", "IL", "IA", "KY", "LA", "MS", "TN")) %>%
set_names("name", "sev", "abrev")
states <- filter(us_sf,
name_en == "Kentucky"|
name_en == "Louisiana"|
name_en == "Mississippi"|
name_en == "Iowa"|
name_en == "Alabama"|
name_en == "Arkansas"|
name_en == "Illinois"|
name_en == "Tennessee")
#states = data.frame(states)
state2 = left_join(states, fls_sev, by = "name")
ggplot() +
geom_sf(data = us_sf, fill = "white") +
geom_sf(data = state2, aes(x = longitude, y = latitude, fill = sev)) +
geom_text(data = state2, aes(x = longitude, y = latitude, label = abrev), size = 3.5, hjust = 0.5, color = "white", fontface = "bold")+
labs(x = "Longitude", y = "Latitude", fill = "FLS Severity (%) \n in the CHECK") +
theme_bw()+
#scale_fill_continuous(high = "#132B43", low = "#56B1F7", guide = guide_colourbar(barwidth = 2, barheight = 10))+
scale_fill_continuous(trans = 'reverse', guide = guide_colourbar(barwidth = 2, barheight = 10))+
annotation_scale(location = "bl", width_hint = 0.2) +
annotation_north_arrow(location = "tr", which_north = "true", pad_x = unit(0.10, "in"), pad_y = unit(0.1, "in"),
style = north_arrow_fancy_orienteering) +
coord_sf(xlim = c(-100, -80), ylim = c(23, 48), expand = FALSE)+
theme(legend.justification = "center",
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title = element_text(size=14),
legend.position = "right",
legend.title = element_text(size=16),
legend.text = element_text(size=14),
panel.background = element_rect(fill = "aliceblue"))
ggsave("Figures/map.png", width = 9, height = 8, dpi = 600, bg = "white")
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(knitr)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(janitor)
library(MetBrewer)
fls_raw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1i6iM8wxkhmG9DH9voX9YJ_x4BdiGgjL5dkYVc293FZI/edit?usp=sharing")
# Tansforming soybean yield from bu/A to kg/ha
fls_raw <- fls_raw %>%
mutate(yld = yld*67.25)
fls_raw
fls_raw %>%
tabyl(state, year)
fls_tetris <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1i6iM8wxkhmG9DH9voX9YJ_x4BdiGgjL5dkYVc293FZI/edit#gid=1552905913", sheetid = "economic")
fls_tetris <- fls_tetris %>%
mutate(
tau = as.numeric(tau),
D = as.numeric(D))
prob <- function(C, P, tau, D) {
profit <- (D - (C / P)) / sqrt(tau) # loss
prob_gain <- pnorm(profit)
prob_gain
}
for (i in 1:length(fls_tetris$C)) {
fls_tetris$breacking_even[i] <- prob(C = fls_tetris$C[i], D = fls_tetris$D[i], tau = fls_tetris$tau[i], P = fls_tetris$P[i]) * 100
}
library(viridis)
library(tidyverse)
library(ggthemes)
dat <- fls_tetris %>%
mutate(
breacking_even = as.numeric(breacking_even),
breacking_even = round(breacking_even, 1)
)
summary(dat$breacking_even)
dat %>%
mutate(breacking_even1 = case_when(
breacking_even >= 75 ~ "p \u2265 75  ",
breacking_even < 75 & breacking_even >= 65 ~ "65 \u2264 p < 75  ",
breacking_even < 65 & breacking_even >= 55 ~ "55 \u2264 p < 65  ",
breacking_even < 55 & breacking_even >= 45 ~ "45 \u2264 p < 55  ",
breacking_even < 45 ~ "0 \u2264 p < 45  ")) %>%
# mutate(fungicide = case_when(
#   fungicide == "FLUO + FLUT" ~ "Fortix",
#   fungicide == "PYRA" ~ "Headline",
#   fungicide == "TTRA" ~ "Domark")) %>%
mutate(class = factor(class, levels = c("HIGH", "LOW"))) %>%
mutate(fungicide = factor(fungicide, levels = c("PYRA", "TTRA", "DIFE + PYDI"))) %>%
ggplot(aes(factor(C), factor(P), z = breacking_even1, fill = breacking_even1, label = breacking_even1)) +
geom_tile(color = "white", size = 0.5) +
scale_fill_manual(values=met.brewer("Austria", 4), name = "Probability (%)")+
#scale_fill_viridis_d(option = "viridis", direction = -1, name = "Probability (%)")+
scale_color_gradient(high = "white", low = "white") +
labs(x = "Fungicide + application cost (US$/ha)", y = "Soybean price (US$/kg) ", fill = "") +
theme_minimal() +
facet_grid(class ~ fungicide, scales = "free") +
theme(text = element_text(size = 20),
legend.justification = "center",
axis.text.x = element_text(size=20, angle = 45, hjust = 1),
axis.text.y = element_text(size=20),
strip.text.x = element_text(size = 25, face = "bold"),
strip.text.y = element_text(size = 25, face = "bold"),
panel.grid.minor = element_line(colour = "white"),
panel.grid.major = element_line(colour = "white"),
legend.position = "bottom")
ggsave("Figures/tetris.png", width = 13, height = 10, dpi = 600, bg = "white")
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(knitr)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(janitor)
library(MetBrewer)
fls_raw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1i6iM8wxkhmG9DH9voX9YJ_x4BdiGgjL5dkYVc293FZI/edit?usp=sharing")
# Tansforming soybean yield from bu/A to kg/ha
fls_raw <- fls_raw %>%
mutate(yld = yld*67.25)
fls_raw
fls_raw %>%
tabyl(state, year)
fls_tetris <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1i6iM8wxkhmG9DH9voX9YJ_x4BdiGgjL5dkYVc293FZI/edit#gid=1552905913", sheetid = "economic")
fls_tetris <- fls_tetris %>%
mutate(
tau = as.numeric(tau),
D = as.numeric(D))
prob <- function(C, P, tau, D) {
profit <- (D - (C / P)) / sqrt(tau) # loss
prob_gain <- pnorm(profit)
prob_gain
}
for (i in 1:length(fls_tetris$C)) {
fls_tetris$breacking_even[i] <- prob(C = fls_tetris$C[i], D = fls_tetris$D[i], tau = fls_tetris$tau[i], P = fls_tetris$P[i]) * 100
}
library(viridis)
library(tidyverse)
library(ggthemes)
dat <- fls_tetris %>%
mutate(
breacking_even = as.numeric(breacking_even),
breacking_even = round(breacking_even, 1)
)
summary(dat$breacking_even)
dat %>%
mutate(breacking_even1 = case_when(
breacking_even >= 75 ~ "p \u2265 75  ",
breacking_even < 75 & breacking_even >= 65 ~ "65 \u2264 p < 75  ",
breacking_even < 65 & breacking_even >= 55 ~ "55 \u2264 p < 65  ",
breacking_even < 55 & breacking_even >= 45 ~ "45 \u2264 p < 55  ",
breacking_even < 45 ~ "0 \u2264 p < 45  ")) %>%
# mutate(fungicide = case_when(
#   fungicide == "FLUO + FLUT" ~ "Fortix",
#   fungicide == "PYRA" ~ "Headline",
#   fungicide == "TTRA" ~ "Domark")) %>%
mutate(class = factor(class, levels = c("HIGH", "LOW"))) %>%
mutate(fungicide = factor(fungicide, levels = c("PYRA", "TTRA", "DIFE + PYDI"))) %>%
ggplot(aes(factor(C), factor(P), z = breacking_even1, fill = breacking_even1, label = breacking_even1)) +
geom_tile(color = "white", size = 0.5) +
scale_fill_manual(values=met.brewer("Austria", 4), name = "Probability (%)")+
#scale_fill_viridis_d(option = "viridis", direction = -1, name = "Probability (%)")+
scale_color_gradient(high = "white", low = "white") +
labs(x = "Fungicide + application cost (US$/ha)", y = "Soybean price (US$/kg) ", fill = "") +
theme_minimal() +
facet_grid(class ~ fungicide, scales = "free") +
theme(text = element_text(size = 20),
legend.justification = "center",
axis.text.x = element_text(size=20, angle = 45, hjust = 1),
axis.text.y = element_text(size=20),
strip.text.x = element_text(size = 25, face = "bold"),
strip.text.y = element_text(size = 25, face = "bold"),
panel.grid.minor = element_line(colour = "white"),
panel.grid.major = element_line(colour = "white"),
legend.position = "bottom")
ggsave("Figures/tetris.png", width = 13, height = 10, dpi = 600, bg = "white")
fls_tetris <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1i6iM8wxkhmG9DH9voX9YJ_x4BdiGgjL5dkYVc293FZI/edit#gid=1552905913", sheetid = "economic")
fls_tetris <- fls_tetris %>%
mutate(
tau = as.numeric(tau),
D = as.numeric(D))
prob <- function(C, P, tau, D) {
profit <- (D - (C / P)) / sqrt(tau) # loss
prob_gain <- pnorm(profit)
prob_gain
}
for (i in 1:length(fls_tetris$C)) {
fls_tetris$breacking_even[i] <- prob(C = fls_tetris$C[i], D = fls_tetris$D[i], tau = fls_tetris$tau[i], P = fls_tetris$P[i]) * 100
}
library(viridis)
library(tidyverse)
library(ggthemes)
dat <- fls_tetris %>%
mutate(
breacking_even = as.numeric(breacking_even),
breacking_even = round(breacking_even, 1)
)
summary(dat$breacking_even)
dat %>%
mutate(breacking_even1 = case_when(
breacking_even >= 75 ~ "p \u2265 75  ",
breacking_even < 75 & breacking_even >= 65 ~ "65 \u2264 p < 75  ",
breacking_even < 65 & breacking_even >= 55 ~ "55 \u2264 p < 65  ",
breacking_even < 55 & breacking_even >= 45 ~ "45 \u2264 p < 55  ",
breacking_even < 45 ~ "0 \u2264 p < 45  ")) %>%
# mutate(fungicide = case_when(
#   fungicide == "FLUO + FLUT" ~ "Fortix",
#   fungicide == "PYRA" ~ "Headline",
#   fungicide == "TTRA" ~ "Domark")) %>%
mutate(class = factor(class, levels = c("HIGH", "LOW"))) %>%
mutate(fungicide = factor(fungicide, levels = c("PYRA", "TTRA", "DIFE + PYDI"))) %>%
ggplot(aes(factor(C), factor(P), z = breacking_even1, fill = breacking_even1, label = breacking_even1)) +
geom_tile(color = "white", size = 0.5) +
scale_fill_manual(values=met.brewer("Austria", 4), name = "Probability (%)")+
#scale_fill_viridis_d(option = "viridis", direction = -1, name = "Probability (%)")+
scale_color_gradient(high = "white", low = "white") +
labs(x = "Fungicide + application cost (US$/ha)", y = "Soybean price (US$/kg) ", fill = "") +
theme_minimal() +
facet_grid(class ~ fungicide, scales = "free") +
theme(text = element_text(size = 20),
legend.justification = "center",
axis.text.x = element_text(size=20, angle = 45, hjust = 1),
axis.text.y = element_text(size=20),
strip.text.x = element_text(size = 25, face = "bold"),
strip.text.y = element_text(size = 25, face = "bold"),
panel.grid.minor = element_line(colour = "white"),
panel.grid.major = element_line(colour = "white"),
legend.position = "bottom")
ggsave("Figures/tetris.png", width = 13, height = 10, dpi = 600, bg = "white")
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(knitr)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(janitor)
fls_raw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1i6iM8wxkhmG9DH9voX9YJ_x4BdiGgjL5dkYVc293FZI/edit?usp=sharing") %>%
group_by(study, brand_name) %>%
mutate(n = n()) #columm with the number of rep
# Tansforming soybean yield from bu/A to kg/ha
fls_raw <- fls_raw %>%
mutate(yld = yld*67.25)
fls_raw
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(knitr)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(janitor)
fls_raw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1i6iM8wxkhmG9DH9voX9YJ_x4BdiGgjL5dkYVc293FZI/edit?usp=sharing") %>%
group_by(study, brand_name) %>%
mutate(n = n()) #columm with the number of rep
# Tansforming soybean yield from bu/A to kg/ha
fls_raw <- fls_raw %>%
mutate(sev = as.numeric(sev),
yld = as.numeric(yld)) %>%
mutate(yld = yld*67.25)
fls_raw
fls_raw %>%
tabyl(state,year)
fls1 <- fls_raw %>%
filter(study != 23) %>%
filter(study != 27) %>%
filter(study != 38) %>%
filter(study != 48) %>%
group_by(study, year, location, state, cultivar, planting_date, app_date, growth_stage, brand_name, group, active_ingred,n) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld))
fls2_sev <- fls_raw %>%
filter(study != 23) %>%
filter(study != 27) %>%
filter(study != 38) %>%
filter(study != 48) %>%
filter(sev>0) %>%
group_by(study, year) %>%
select(active_ingred, rep, sev) %>%
group_by(study, year) %>%
do(tidy(aov(.$sev ~ .$active_ingred + factor(.$rep)))) %>%
filter(term == "Residuals") %>%
select(1,2,6) %>%
set_names("study", "year", "v_sev")
fls2_yld <- fls_raw %>%
filter(study != 23) %>%
filter(study != 27) %>%
filter(study != 38) %>%
filter(study != 48) %>%
group_by(study, year) %>%
select(active_ingred, rep, yld) %>%
group_by(study, year) %>%
do(tidy(aov(.$yld ~ .$active_ingred + factor(.$rep)))) %>%
filter(term == "Residuals") %>%
select(1,2,6) %>%
set_names("study", "year", "v_yld")
qmr = left_join(fls2_sev, fls2_yld)
fls_trial = full_join(fls1, qmr)
fls_trial
fls23 = fls_raw %>%
filter(study == 23) %>%
group_by(study, year, location, state) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld)) %>%
mutate(v_sev = ((21.48/100)*mean_sev)^2,
v_yld = ((5.95/100)*mean_yld)^2)
fls23
fls27 = fls_raw %>%
filter(study == 27) %>%
group_by(study, year, location, state) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld)) %>%
mutate(v_sev = ((21.01/100)*mean_sev)^2,
v_yld = ((8.94/100)*mean_yld)^2)
fls27
fls38 = fls_raw %>%
filter(study == 38) %>%
group_by(study, year, location, state) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld)) %>%
mutate(v_sev = ((0/100)*mean_sev)^2,
v_yld = ((8.59/100)*mean_yld)^2)
fls38
fls48 = fls_raw %>%
filter(study == 48) %>%
group_by(study, year, location, state) %>%
summarise(mean_sev = mean(sev),
mean_yld = mean(yld)) %>%
mutate(v_sev = ((0/100)*mean_sev)^2,
v_yld = ((11/100)*mean_yld)^2)
fls48
fls3 = rbind(fls23, fls27, fls38, fls48) %>%
select(1:4,7:8)
fls_cv = fls_raw %>%
filter(study %in% c(23,27,38,48)) %>%
mutate(n = n*4) %>%
full_join(fls3) %>%
#select(-c(12,13,16)) %>%
mutate(mean_sev = sev, mean_yld = yld) %>%
select(-c(sev, yld))
fls_cv
fls = full_join(fls_trial, fls_cv)
fls
# these two columns will be used as moderator variables later
fls_check = fls %>%
ungroup() %>%
filter(brand_name == "check")  %>%
mutate(check = brand_name, sev_check = mean_sev, v_sev_check = v_sev, yld_check = mean_yld, v_yld_check = v_yld ) %>%
select(study, yld_check, v_yld_check, sev_check, v_sev_check)
fls_data = fls %>%
full_join(fls_check)
library(readr)
write_csv(fls_data, "data/fls_data.csv")
fls_data %>%
tabyl(cultivar)
